meta_info_def {
  stripped_op_list {
    op {
      name: "Add"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_STRING
          }
        }
      }
    }
    op {
      name: "Assign"
      input_arg {
        name: "ref"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output_ref"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "validate_shape"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: true
        }
      }
      allows_uninitialized_input: true
    }
    op {
      name: "AssignSub"
      input_arg {
        name: "ref"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output_ref"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: false
        }
      }
    }
    op {
      name: "Const"
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "value"
        type: "tensor"
      }
      attr {
        name: "dtype"
        type: "type"
      }
    }
    op {
      name: "Identity"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "IsVariableInitialized"
      input_arg {
        name: "ref"
        type_attr: "dtype"
        is_ref: true
      }
      output_arg {
        name: "is_initialized"
        type: DT_BOOL
      }
      attr {
        name: "dtype"
        type: "type"
      }
      allows_uninitialized_input: true
    }
    op {
      name: "Merge"
      input_arg {
        name: "inputs"
        type_attr: "T"
        number_attr: "N"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      output_arg {
        name: "value_index"
        type: DT_INT32
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 1
      }
    }
    op {
      name: "Mul"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "NoOp"
    }
    op {
      name: "RefSwitch"
      input_arg {
        name: "data"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "pred"
        type: DT_BOOL
      }
      output_arg {
        name: "output_false"
        type_attr: "T"
        is_ref: true
      }
      output_arg {
        name: "output_true"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
      }
      allows_uninitialized_input: true
    }
    op {
      name: "RestoreV2"
      input_arg {
        name: "prefix"
        type: DT_STRING
      }
      input_arg {
        name: "tensor_names"
        type: DT_STRING
      }
      input_arg {
        name: "shape_and_slices"
        type: DT_STRING
      }
      output_arg {
        name: "tensors"
        type_list_attr: "dtypes"
      }
      attr {
        name: "dtypes"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      is_stateful: true
    }
    op {
      name: "SaveV2"
      input_arg {
        name: "prefix"
        type: DT_STRING
      }
      input_arg {
        name: "tensor_names"
        type: DT_STRING
      }
      input_arg {
        name: "shape_and_slices"
        type: DT_STRING
      }
      input_arg {
        name: "tensors"
        type_list_attr: "dtypes"
      }
      attr {
        name: "dtypes"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      is_stateful: true
    }
    op {
      name: "Sub"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Switch"
      input_arg {
        name: "data"
        type_attr: "T"
      }
      input_arg {
        name: "pred"
        type: DT_BOOL
      }
      output_arg {
        name: "output_false"
        type_attr: "T"
      }
      output_arg {
        name: "output_true"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "VariableV2"
      output_arg {
        name: "ref"
        type_attr: "dtype"
        is_ref: true
      }
      attr {
        name: "shape"
        type: "shape"
      }
      attr {
        name: "dtype"
        type: "type"
      }
      attr {
        name: "container"
        type: "string"
        default_value {
          s: ""
        }
      }
      attr {
        name: "shared_name"
        type: "string"
        default_value {
          s: ""
        }
      }
      is_stateful: true
    }
  }
  tensorflow_version: "1.4.0"
  tensorflow_git_version: "v1.4.0-rc1-11-g130a514"
}
graph_def {
  node {
    name: "Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "other-v1"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "other-v1/Assign"
    op: "Assign"
    input: "other-v1"
    input: "Const"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "other-v1/read"
    op: "Identity"
    input: "other-v1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 2.0
        }
      }
    }
  }
  node {
    name: "other-v2"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "other-v2/Assign"
    op: "Assign"
    input: "other-v2"
    input: "Const_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "other-v2/read"
    op: "Identity"
    input: "other-v2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "add"
    op: "Add"
    input: "other-v1/read"
    input: "other-v2/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "save/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "save/SaveV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 2
            }
          }
          string_val: "v1"
          string_val: "v2"
        }
      }
    }
  }
  node {
    name: "save/SaveV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 2
            }
          }
          string_val: ""
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/SaveV2"
    op: "SaveV2"
    input: "save/Const"
    input: "save/SaveV2/tensor_names"
    input: "save/SaveV2/shape_and_slices"
    input: "other-v1"
    input: "other-v2"
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save/control_dependency"
    op: "Identity"
    input: "save/Const"
    input: "^save/SaveV2"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@save/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save/RestoreV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v1"
        }
      }
    }
  }
  node {
    name: "save/RestoreV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/RestoreV2"
    op: "RestoreV2"
    input: "save/Const"
    input: "save/RestoreV2/tensor_names"
    input: "save/RestoreV2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save/Assign"
    op: "Assign"
    input: "other-v1"
    input: "save/RestoreV2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/RestoreV2_1/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v2"
        }
      }
    }
  }
  node {
    name: "save/RestoreV2_1/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/RestoreV2_1"
    op: "RestoreV2"
    input: "save/Const"
    input: "save/RestoreV2_1/tensor_names"
    input: "save/RestoreV2_1/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save/Assign_1"
    op: "Assign"
    input: "other-v2"
    input: "save/RestoreV2_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_all"
    op: "NoOp"
    input: "^save/Assign"
    input: "^save/Assign_1"
  }
  node {
    name: "v/initial_value"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "v"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v/Assign"
    op: "Assign"
    input: "v"
    input: "v/initial_value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v/read"
    op: "Identity"
    input: "v"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "IsVariableInitialized"
    op: "IsVariableInitialized"
    input: "other-v1"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "cond/Switch"
    op: "Switch"
    input: "IsVariableInitialized"
    input: "IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond/switch_t"
    op: "Identity"
    input: "cond/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond/switch_f"
    op: "Identity"
    input: "cond/Switch"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond/pred_id"
    op: "Identity"
    input: "IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond/read/Switch"
    op: "RefSwitch"
    input: "other-v1"
    input: "cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "cond/read"
    op: "Identity"
    input: "cond/read/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "cond/Switch_1"
    op: "Switch"
    input: "Const"
    input: "cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "cond/Merge"
    op: "Merge"
    input: "cond/Switch_1"
    input: "cond/read"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/IsVariableInitialized"
    op: "IsVariableInitialized"
    input: "other-v1"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/Switch"
    op: "Switch"
    input: "other-v1/ExponentialMovingAverage/IsVariableInitialized"
    input: "other-v1/ExponentialMovingAverage/IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/switch_t"
    op: "Identity"
    input: "other-v1/ExponentialMovingAverage/cond/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/switch_f"
    op: "Identity"
    input: "other-v1/ExponentialMovingAverage/cond/Switch"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/pred_id"
    op: "Identity"
    input: "other-v1/ExponentialMovingAverage/IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/read/Switch"
    op: "RefSwitch"
    input: "other-v1"
    input: "other-v1/ExponentialMovingAverage/cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/read"
    op: "Identity"
    input: "other-v1/ExponentialMovingAverage/cond/read/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/Switch_1"
    op: "Switch"
    input: "Const"
    input: "other-v1/ExponentialMovingAverage/cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/Merge"
    op: "Merge"
    input: "other-v1/ExponentialMovingAverage/cond/Switch_1"
    input: "other-v1/ExponentialMovingAverage/cond/read"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/read/Switch_other-v1/ExponentialMovingAverage_0"
    op: "Switch"
    input: "other-v1/ExponentialMovingAverage/cond/Merge"
    input: "cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/read_other-v1/ExponentialMovingAverage_0"
    op: "Identity"
    input: "other-v1/ExponentialMovingAverage/cond/read/Switch_other-v1/ExponentialMovingAverage_0:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/cond/Merge_other-v1/ExponentialMovingAverage_0"
    op: "Merge"
    input: "cond/Switch_1"
    input: "other-v1/ExponentialMovingAverage/cond/read_other-v1/ExponentialMovingAverage_0"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/Assign"
    op: "Assign"
    input: "other-v1/ExponentialMovingAverage"
    input: "other-v1/ExponentialMovingAverage/cond/Merge_other-v1/ExponentialMovingAverage_0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "other-v1/ExponentialMovingAverage/read"
    op: "Identity"
    input: "other-v1/ExponentialMovingAverage"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "IsVariableInitialized_1"
    op: "IsVariableInitialized"
    input: "other-v2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "cond_1/Switch"
    op: "Switch"
    input: "IsVariableInitialized_1"
    input: "IsVariableInitialized_1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_1/switch_t"
    op: "Identity"
    input: "cond_1/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_1/switch_f"
    op: "Identity"
    input: "cond_1/Switch"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_1/pred_id"
    op: "Identity"
    input: "IsVariableInitialized_1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_1/read/Switch"
    op: "RefSwitch"
    input: "other-v2"
    input: "cond_1/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "cond_1/read"
    op: "Identity"
    input: "cond_1/read/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "cond_1/Switch_1"
    op: "Switch"
    input: "Const_1"
    input: "cond_1/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Const_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "cond_1/Merge"
    op: "Merge"
    input: "cond_1/Switch_1"
    input: "cond_1/read"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/IsVariableInitialized"
    op: "IsVariableInitialized"
    input: "other-v2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/Switch"
    op: "Switch"
    input: "other-v2/ExponentialMovingAverage/IsVariableInitialized"
    input: "other-v2/ExponentialMovingAverage/IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/switch_t"
    op: "Identity"
    input: "other-v2/ExponentialMovingAverage/cond/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/switch_f"
    op: "Identity"
    input: "other-v2/ExponentialMovingAverage/cond/Switch"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/pred_id"
    op: "Identity"
    input: "other-v2/ExponentialMovingAverage/IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/read/Switch"
    op: "RefSwitch"
    input: "other-v2"
    input: "other-v2/ExponentialMovingAverage/cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/read"
    op: "Identity"
    input: "other-v2/ExponentialMovingAverage/cond/read/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/Switch_1"
    op: "Switch"
    input: "Const_1"
    input: "other-v2/ExponentialMovingAverage/cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Const_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond/Merge"
    op: "Merge"
    input: "other-v2/ExponentialMovingAverage/cond/Switch_1"
    input: "other-v2/ExponentialMovingAverage/cond/read"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond_1/read/Switch_other-v2/ExponentialMovingAverage_0"
    op: "Switch"
    input: "other-v2/ExponentialMovingAverage/cond/Merge"
    input: "cond_1/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond_1/read_other-v2/ExponentialMovingAverage_0"
    op: "Identity"
    input: "other-v2/ExponentialMovingAverage/cond_1/read/Switch_other-v2/ExponentialMovingAverage_0:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/cond_1/Merge_other-v2/ExponentialMovingAverage_0"
    op: "Merge"
    input: "cond_1/Switch_1"
    input: "other-v2/ExponentialMovingAverage/cond_1/read_other-v2/ExponentialMovingAverage_0"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/Assign"
    op: "Assign"
    input: "other-v2/ExponentialMovingAverage"
    input: "other-v2/ExponentialMovingAverage/cond_1/Merge_other-v2/ExponentialMovingAverage_0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "other-v2/ExponentialMovingAverage/read"
    op: "Identity"
    input: "other-v2/ExponentialMovingAverage"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "IsVariableInitialized_2"
    op: "IsVariableInitialized"
    input: "v"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "cond_2/Switch"
    op: "Switch"
    input: "IsVariableInitialized_2"
    input: "IsVariableInitialized_2"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/switch_t"
    op: "Identity"
    input: "cond_2/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/switch_f"
    op: "Identity"
    input: "cond_2/Switch"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/pred_id"
    op: "Identity"
    input: "IsVariableInitialized_2"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/read/Switch"
    op: "RefSwitch"
    input: "v"
    input: "cond_2/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/read"
    op: "Identity"
    input: "cond_2/read/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/Switch_1"
    op: "Switch"
    input: "v/initial_value"
    input: "cond_2/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v/initial_value"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "cond_2/Merge"
    op: "Merge"
    input: "cond_2/Switch_1"
    input: "cond_2/read"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/IsVariableInitialized"
    op: "IsVariableInitialized"
    input: "v"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/Switch"
    op: "Switch"
    input: "v/ExponentialMovingAverage/IsVariableInitialized"
    input: "v/ExponentialMovingAverage/IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/switch_t"
    op: "Identity"
    input: "v/ExponentialMovingAverage/cond/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/switch_f"
    op: "Identity"
    input: "v/ExponentialMovingAverage/cond/Switch"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/pred_id"
    op: "Identity"
    input: "v/ExponentialMovingAverage/IsVariableInitialized"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/read/Switch"
    op: "RefSwitch"
    input: "v"
    input: "v/ExponentialMovingAverage/cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/read"
    op: "Identity"
    input: "v/ExponentialMovingAverage/cond/read/Switch:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/Switch_1"
    op: "Switch"
    input: "v/initial_value"
    input: "v/ExponentialMovingAverage/cond/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v/initial_value"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond/Merge"
    op: "Merge"
    input: "v/ExponentialMovingAverage/cond/Switch_1"
    input: "v/ExponentialMovingAverage/cond/read"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond_2/read/Switch_v/ExponentialMovingAverage_0"
    op: "Switch"
    input: "v/ExponentialMovingAverage/cond/Merge"
    input: "cond_2/pred_id"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond_2/read_v/ExponentialMovingAverage_0"
    op: "Identity"
    input: "v/ExponentialMovingAverage/cond_2/read/Switch_v/ExponentialMovingAverage_0:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/cond_2/Merge_v/ExponentialMovingAverage_0"
    op: "Merge"
    input: "cond_2/Switch_1"
    input: "v/ExponentialMovingAverage/cond_2/read_v/ExponentialMovingAverage_0"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/Assign"
    op: "Assign"
    input: "v/ExponentialMovingAverage"
    input: "v/ExponentialMovingAverage/cond_2/Merge_v/ExponentialMovingAverage_0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v/ExponentialMovingAverage/read"
    op: "Identity"
    input: "v/ExponentialMovingAverage"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/decay"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.990000009537
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg/sub"
    op: "Sub"
    input: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
    input: "ExponentialMovingAverage/decay"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
    op: "Sub"
    input: "other-v1/ExponentialMovingAverage/read"
    input: "other-v1/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg/mul"
    op: "Mul"
    input: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
    input: "ExponentialMovingAverage/AssignMovingAvg/sub"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg"
    op: "AssignSub"
    input: "other-v1/ExponentialMovingAverage"
    input: "ExponentialMovingAverage/AssignMovingAvg/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
    op: "Sub"
    input: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
    input: "ExponentialMovingAverage/decay"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
    op: "Sub"
    input: "other-v2/ExponentialMovingAverage/read"
    input: "other-v2/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
    op: "Mul"
    input: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
    input: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_1"
    op: "AssignSub"
    input: "other-v2/ExponentialMovingAverage"
    input: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
    op: "Sub"
    input: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
    input: "ExponentialMovingAverage/decay"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
    op: "Sub"
    input: "v/ExponentialMovingAverage/read"
    input: "v/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
    op: "Mul"
    input: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
    input: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ExponentialMovingAverage/AssignMovingAvg_2"
    op: "AssignSub"
    input: "v/ExponentialMovingAverage"
    input: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "ExponentialMovingAverage"
    op: "NoOp"
    input: "^ExponentialMovingAverage/AssignMovingAvg"
    input: "^ExponentialMovingAverage/AssignMovingAvg_1"
    input: "^ExponentialMovingAverage/AssignMovingAvg_2"
  }
  node {
    name: "save_1/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "save_1/SaveV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 6
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 6
            }
          }
          string_val: "other-v1"
          string_val: "other-v1/ExponentialMovingAverage"
          string_val: "other-v2"
          string_val: "other-v2/ExponentialMovingAverage"
          string_val: "v"
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_1/SaveV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 6
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 6
            }
          }
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/SaveV2"
    op: "SaveV2"
    input: "save_1/Const"
    input: "save_1/SaveV2/tensor_names"
    input: "save_1/SaveV2/shape_and_slices"
    input: "other-v1"
    input: "other-v1/ExponentialMovingAverage"
    input: "other-v2"
    input: "other-v2/ExponentialMovingAverage"
    input: "v"
    input: "v/ExponentialMovingAverage"
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/control_dependency"
    op: "Identity"
    input: "save_1/Const"
    input: "^save_1/SaveV2"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@save_1/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v1"
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2"
    op: "RestoreV2"
    input: "save_1/Const"
    input: "save_1/RestoreV2/tensor_names"
    input: "save_1/RestoreV2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/Assign"
    op: "Assign"
    input: "other-v1"
    input: "save_1/RestoreV2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_1/RestoreV2_1/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v1/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_1/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_1"
    op: "RestoreV2"
    input: "save_1/Const"
    input: "save_1/RestoreV2_1/tensor_names"
    input: "save_1/RestoreV2_1/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/Assign_1"
    op: "Assign"
    input: "other-v1/ExponentialMovingAverage"
    input: "save_1/RestoreV2_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_1/RestoreV2_2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v2"
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_2"
    op: "RestoreV2"
    input: "save_1/Const"
    input: "save_1/RestoreV2_2/tensor_names"
    input: "save_1/RestoreV2_2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/Assign_2"
    op: "Assign"
    input: "other-v2"
    input: "save_1/RestoreV2_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_1/RestoreV2_3/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v2/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_3/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_3"
    op: "RestoreV2"
    input: "save_1/Const"
    input: "save_1/RestoreV2_3/tensor_names"
    input: "save_1/RestoreV2_3/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/Assign_3"
    op: "Assign"
    input: "other-v2/ExponentialMovingAverage"
    input: "save_1/RestoreV2_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_1/RestoreV2_4/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v"
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_4/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_4"
    op: "RestoreV2"
    input: "save_1/Const"
    input: "save_1/RestoreV2_4/tensor_names"
    input: "save_1/RestoreV2_4/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/Assign_4"
    op: "Assign"
    input: "v"
    input: "save_1/RestoreV2_4"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_1/RestoreV2_5/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_5/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_1/RestoreV2_5"
    op: "RestoreV2"
    input: "save_1/Const"
    input: "save_1/RestoreV2_5/tensor_names"
    input: "save_1/RestoreV2_5/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_1/Assign_5"
    op: "Assign"
    input: "v/ExponentialMovingAverage"
    input: "save_1/RestoreV2_5"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_1/restore_all"
    op: "NoOp"
    input: "^save_1/Assign"
    input: "^save_1/Assign_1"
    input: "^save_1/Assign_2"
    input: "^save_1/Assign_3"
    input: "^save_1/Assign_4"
    input: "^save_1/Assign_5"
  }
  node {
    name: "init"
    op: "NoOp"
    input: "^other-v1/Assign"
    input: "^other-v2/Assign"
    input: "^v/Assign"
    input: "^other-v1/ExponentialMovingAverage/Assign"
    input: "^other-v2/ExponentialMovingAverage/Assign"
    input: "^v/ExponentialMovingAverage/Assign"
  }
  node {
    name: "Assign/value"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 10.0
        }
      }
    }
  }
  node {
    name: "Assign"
    op: "Assign"
    input: "v"
    input: "Assign/value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v_1/initial_value"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "v_1"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v_1/Assign"
    op: "Assign"
    input: "v_1"
    input: "v_1/initial_value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v_1/read"
    op: "Identity"
    input: "v_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save_2/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "save_2/SaveV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_2/SaveV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_2/SaveV2"
    op: "SaveV2"
    input: "save_2/Const"
    input: "save_2/SaveV2/tensor_names"
    input: "save_2/SaveV2/shape_and_slices"
    input: "v_1"
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_2/control_dependency"
    op: "Identity"
    input: "save_2/Const"
    input: "^save_2/SaveV2"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@save_2/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save_2/RestoreV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_2/RestoreV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_2/RestoreV2"
    op: "RestoreV2"
    input: "save_2/Const"
    input: "save_2/RestoreV2/tensor_names"
    input: "save_2/RestoreV2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_2/Assign"
    op: "Assign"
    input: "v_1"
    input: "save_2/RestoreV2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_2/restore_all"
    op: "NoOp"
    input: "^save_2/Assign"
  }
  node {
    name: "v_2/initial_value"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "v_2"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v_2/Assign"
    op: "Assign"
    input: "v_2"
    input: "v_2/initial_value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v_2/read"
    op: "Identity"
    input: "v_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save_3/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "save_3/SaveV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_3/SaveV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_3/SaveV2"
    op: "SaveV2"
    input: "save_3/Const"
    input: "save_3/SaveV2/tensor_names"
    input: "save_3/SaveV2/shape_and_slices"
    input: "v_2"
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_3/control_dependency"
    op: "Identity"
    input: "save_3/Const"
    input: "^save_3/SaveV2"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@save_3/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save_3/RestoreV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_3/RestoreV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_3/RestoreV2"
    op: "RestoreV2"
    input: "save_3/Const"
    input: "save_3/RestoreV2/tensor_names"
    input: "save_3/RestoreV2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_3/Assign"
    op: "Assign"
    input: "v_2"
    input: "save_3/RestoreV2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_3/restore_all"
    op: "NoOp"
    input: "^save_3/Assign"
  }
  node {
    name: "Const_2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "v1"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v1/Assign"
    op: "Assign"
    input: "v1"
    input: "Const_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v1/read"
    op: "Identity"
    input: "v1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_3"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 2.0
        }
      }
    }
  }
  node {
    name: "v2"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v2/Assign"
    op: "Assign"
    input: "v2"
    input: "Const_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v2/read"
    op: "Identity"
    input: "v2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "add_1"
    op: "Add"
    input: "v1/read"
    input: "v2/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "init_1"
    op: "NoOp"
    input: "^other-v1/Assign"
    input: "^other-v2/Assign"
    input: "^v/Assign"
    input: "^other-v1/ExponentialMovingAverage/Assign"
    input: "^other-v2/ExponentialMovingAverage/Assign"
    input: "^v/ExponentialMovingAverage/Assign"
    input: "^v_1/Assign"
    input: "^v_2/Assign"
    input: "^v1/Assign"
    input: "^v2/Assign"
  }
  node {
    name: "import/other-v1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "import/other-v1/read"
    op: "Identity"
    input: "import/other-v1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@import/other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "import/other-v2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 2.0
        }
      }
    }
  }
  node {
    name: "import/other-v2/read"
    op: "Identity"
    input: "import/other-v2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@import/other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "import/add"
    op: "Add"
    input: "import/other-v1/read"
    input: "import/other-v2/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_4"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "v1_1"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v1_1/Assign"
    op: "Assign"
    input: "v1_1"
    input: "Const_4"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v1_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v1_1/read"
    op: "Identity"
    input: "v1_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v1_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_5"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
          }
          float_val: 2.0
        }
      }
    }
  }
  node {
    name: "v2_1"
    op: "VariableV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "v2_1/Assign"
    op: "Assign"
    input: "v2_1"
    input: "Const_5"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v2_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "v2_1/read"
    op: "Identity"
    input: "v2_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v2_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "add_2"
    op: "Add"
    input: "v1_1/read"
    input: "v2_1/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "save_4/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "save_4/SaveV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 12
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 12
            }
          }
          string_val: "other-v1"
          string_val: "other-v1/ExponentialMovingAverage"
          string_val: "other-v2"
          string_val: "other-v2/ExponentialMovingAverage"
          string_val: "v"
          string_val: "v/ExponentialMovingAverage"
          string_val: "v1"
          string_val: "v1_1"
          string_val: "v2"
          string_val: "v2_1"
          string_val: "v_1"
          string_val: "v_2"
        }
      }
    }
  }
  node {
    name: "save_4/SaveV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 12
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 12
            }
          }
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/SaveV2"
    op: "SaveV2"
    input: "save_4/Const"
    input: "save_4/SaveV2/tensor_names"
    input: "save_4/SaveV2/shape_and_slices"
    input: "other-v1"
    input: "other-v1/ExponentialMovingAverage"
    input: "other-v2"
    input: "other-v2/ExponentialMovingAverage"
    input: "v"
    input: "v/ExponentialMovingAverage"
    input: "v1"
    input: "v1_1"
    input: "v2"
    input: "v2_1"
    input: "v_1"
    input: "v_2"
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/control_dependency"
    op: "Identity"
    input: "save_4/Const"
    input: "^save_4/SaveV2"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@save_4/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v1"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2/tensor_names"
    input: "save_4/RestoreV2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign"
    op: "Assign"
    input: "other-v1"
    input: "save_4/RestoreV2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_1/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v1/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_1/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_1"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_1/tensor_names"
    input: "save_4/RestoreV2_1/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_1"
    op: "Assign"
    input: "other-v1/ExponentialMovingAverage"
    input: "save_4/RestoreV2_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v2"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_2"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_2/tensor_names"
    input: "save_4/RestoreV2_2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_2"
    op: "Assign"
    input: "other-v2"
    input: "save_4/RestoreV2_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_3/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "other-v2/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_3/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_3"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_3/tensor_names"
    input: "save_4/RestoreV2_3/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_3"
    op: "Assign"
    input: "other-v2/ExponentialMovingAverage"
    input: "save_4/RestoreV2_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@other-v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_4/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_4/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_4"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_4/tensor_names"
    input: "save_4/RestoreV2_4/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_4"
    op: "Assign"
    input: "v"
    input: "save_4/RestoreV2_4"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_5/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v/ExponentialMovingAverage"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_5/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_5"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_5/tensor_names"
    input: "save_4/RestoreV2_5/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_5"
    op: "Assign"
    input: "v/ExponentialMovingAverage"
    input: "save_4/RestoreV2_5"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_6/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v1"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_6/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_6"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_6/tensor_names"
    input: "save_4/RestoreV2_6/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_6"
    op: "Assign"
    input: "v1"
    input: "save_4/RestoreV2_6"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_7/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v1_1"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_7/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_7"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_7/tensor_names"
    input: "save_4/RestoreV2_7/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_7"
    op: "Assign"
    input: "v1_1"
    input: "save_4/RestoreV2_7"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v1_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_8/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v2"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_8/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_8"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_8/tensor_names"
    input: "save_4/RestoreV2_8/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_8"
    op: "Assign"
    input: "v2"
    input: "save_4/RestoreV2_8"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_9/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v2_1"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_9/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_9"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_9/tensor_names"
    input: "save_4/RestoreV2_9/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_9"
    op: "Assign"
    input: "v2_1"
    input: "save_4/RestoreV2_9"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v2_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_10/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v_1"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_10/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_10"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_10/tensor_names"
    input: "save_4/RestoreV2_10/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_10"
    op: "Assign"
    input: "v_1"
    input: "save_4/RestoreV2_10"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/RestoreV2_11/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "v_2"
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_11/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save_4/RestoreV2_11"
    op: "RestoreV2"
    input: "save_4/Const"
    input: "save_4/RestoreV2_11/tensor_names"
    input: "save_4/RestoreV2_11/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save_4/Assign_11"
    op: "Assign"
    input: "v_2"
    input: "save_4/RestoreV2_11"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@v_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save_4/restore_all"
    op: "NoOp"
    input: "^save_4/Assign"
    input: "^save_4/Assign_1"
    input: "^save_4/Assign_2"
    input: "^save_4/Assign_3"
    input: "^save_4/Assign_4"
    input: "^save_4/Assign_5"
    input: "^save_4/Assign_6"
    input: "^save_4/Assign_7"
    input: "^save_4/Assign_8"
    input: "^save_4/Assign_9"
    input: "^save_4/Assign_10"
    input: "^save_4/Assign_11"
  }
  versions {
  }
}
saver_def {
  filename_tensor_name: "save_4/Const:0"
  save_tensor_name: "save_4/control_dependency:0"
  restore_op_name: "save_4/restore_all"
  max_to_keep: 5
  keep_checkpoint_every_n_hours: 10000.0
  version: V2
}
collection_def {
  key: "cond_context"
  value {
    bytes_list {
      value: "\n\016cond/cond_text\022\016cond/pred_id:0\032\017cond/switch_t:0 \001*p\n\016cond/pred_id:0\n\022cond/read/Switch:1\n\013cond/read:0\n\017cond/switch_t:0\n\nother-v1:0\022 \n\nother-v1:0\022\022cond/read/Switch:1"
      value: "\n\020cond/cond_text_1\022\016cond/pred_id:0\032\017cond/switch_f:0*h\n\007Const:0\n\017cond/Switch_1:0\n\017cond/Switch_1:1\n\016cond/pred_id:0\n\017cond/switch_f:0\022\032\n\007Const:0\022\017cond/Switch_1:0"
      value: "\n0other-v1/ExponentialMovingAverage/cond/cond_text\0220other-v1/ExponentialMovingAverage/cond/pred_id:0\0321other-v1/ExponentialMovingAverage/cond/switch_t:0 \001*\232\002\n0other-v1/ExponentialMovingAverage/cond/pred_id:0\n4other-v1/ExponentialMovingAverage/cond/read/Switch:1\n-other-v1/ExponentialMovingAverage/cond/read:0\n1other-v1/ExponentialMovingAverage/cond/switch_t:0\n\nother-v1:0\022B\n\nother-v1:0\0224other-v1/ExponentialMovingAverage/cond/read/Switch:1"
      value: "\n2other-v1/ExponentialMovingAverage/cond/cond_text_1\0220other-v1/ExponentialMovingAverage/cond/pred_id:0\0321other-v1/ExponentialMovingAverage/cond/switch_f:0*\222\002\n\007Const:0\n1other-v1/ExponentialMovingAverage/cond/Switch_1:0\n1other-v1/ExponentialMovingAverage/cond/Switch_1:1\n0other-v1/ExponentialMovingAverage/cond/pred_id:0\n1other-v1/ExponentialMovingAverage/cond/switch_f:0\022<\n\007Const:0\0221other-v1/ExponentialMovingAverage/cond/Switch_1:0"
      value: "\n\020cond_1/cond_text\022\020cond_1/pred_id:0\032\021cond_1/switch_t:0 \001*z\n\020cond_1/pred_id:0\n\024cond_1/read/Switch:1\n\rcond_1/read:0\n\021cond_1/switch_t:0\n\nother-v2:0\022\"\n\nother-v2:0\022\024cond_1/read/Switch:1"
      value: "\n\022cond_1/cond_text_1\022\020cond_1/pred_id:0\032\021cond_1/switch_f:0*v\n\tConst_1:0\n\021cond_1/Switch_1:0\n\021cond_1/Switch_1:1\n\020cond_1/pred_id:0\n\021cond_1/switch_f:0\022\036\n\tConst_1:0\022\021cond_1/Switch_1:0"
      value: "\n0other-v2/ExponentialMovingAverage/cond/cond_text\0220other-v2/ExponentialMovingAverage/cond/pred_id:0\0321other-v2/ExponentialMovingAverage/cond/switch_t:0 \001*\232\002\n0other-v2/ExponentialMovingAverage/cond/pred_id:0\n4other-v2/ExponentialMovingAverage/cond/read/Switch:1\n-other-v2/ExponentialMovingAverage/cond/read:0\n1other-v2/ExponentialMovingAverage/cond/switch_t:0\n\nother-v2:0\022B\n\nother-v2:0\0224other-v2/ExponentialMovingAverage/cond/read/Switch:1"
      value: "\n2other-v2/ExponentialMovingAverage/cond/cond_text_1\0220other-v2/ExponentialMovingAverage/cond/pred_id:0\0321other-v2/ExponentialMovingAverage/cond/switch_f:0*\226\002\n\tConst_1:0\n1other-v2/ExponentialMovingAverage/cond/Switch_1:0\n1other-v2/ExponentialMovingAverage/cond/Switch_1:1\n0other-v2/ExponentialMovingAverage/cond/pred_id:0\n1other-v2/ExponentialMovingAverage/cond/switch_f:0\022>\n\tConst_1:0\0221other-v2/ExponentialMovingAverage/cond/Switch_1:0"
      value: "\n\020cond_2/cond_text\022\020cond_2/pred_id:0\032\021cond_2/switch_t:0 \001*l\n\020cond_2/pred_id:0\n\024cond_2/read/Switch:1\n\rcond_2/read:0\n\021cond_2/switch_t:0\n\003v:0\022\033\n\003v:0\022\024cond_2/read/Switch:1"
      value: "\n\022cond_2/cond_text_1\022\020cond_2/pred_id:0\032\021cond_2/switch_f:0*\206\001\n\021cond_2/Switch_1:0\n\021cond_2/Switch_1:1\n\020cond_2/pred_id:0\n\021cond_2/switch_f:0\n\021v/initial_value:0\022&\n\021v/initial_value:0\022\021cond_2/Switch_1:0"
      value: "\n)v/ExponentialMovingAverage/cond/cond_text\022)v/ExponentialMovingAverage/cond/pred_id:0\032*v/ExponentialMovingAverage/cond/switch_t:0 \001*\351\001\n)v/ExponentialMovingAverage/cond/pred_id:0\n-v/ExponentialMovingAverage/cond/read/Switch:1\n&v/ExponentialMovingAverage/cond/read:0\n*v/ExponentialMovingAverage/cond/switch_t:0\n\003v:0\0224\n\003v:0\022-v/ExponentialMovingAverage/cond/read/Switch:1"
      value: "\n+v/ExponentialMovingAverage/cond/cond_text_1\022)v/ExponentialMovingAverage/cond/pred_id:0\032*v/ExponentialMovingAverage/cond/switch_f:0*\203\002\n*v/ExponentialMovingAverage/cond/Switch_1:0\n*v/ExponentialMovingAverage/cond/Switch_1:1\n)v/ExponentialMovingAverage/cond/pred_id:0\n*v/ExponentialMovingAverage/cond/switch_f:0\n\021v/initial_value:0\022?\n\021v/initial_value:0\022*v/ExponentialMovingAverage/cond/Switch_1:0"
    }
  }
}
collection_def {
  key: "moving_average_variables"
  value {
    bytes_list {
      value: "\n\nother-v1:0\022\017other-v1/Assign\032\017other-v1/read:02\007Const:0"
      value: "\n\nother-v2:0\022\017other-v2/Assign\032\017other-v2/read:02\tConst_1:0"
      value: "\n\003v:0\022\010v/Assign\032\010v/read:02\021v/initial_value:0"
    }
  }
}
collection_def {
  key: "trainable_variables"
  value {
    bytes_list {
      value: "\n\nother-v1:0\022\017other-v1/Assign\032\017other-v1/read:02\007Const:0"
      value: "\n\nother-v2:0\022\017other-v2/Assign\032\017other-v2/read:02\tConst_1:0"
      value: "\n\003v:0\022\010v/Assign\032\010v/read:02\021v/initial_value:0"
      value: "\n\005v_1:0\022\nv_1/Assign\032\nv_1/read:02\023v_1/initial_value:0"
      value: "\n\005v_2:0\022\nv_2/Assign\032\nv_2/read:02\023v_2/initial_value:0"
      value: "\n\004v1:0\022\tv1/Assign\032\tv1/read:02\tConst_2:0"
      value: "\n\004v2:0\022\tv2/Assign\032\tv2/read:02\tConst_3:0"
      value: "\n\006v1_1:0\022\013v1_1/Assign\032\013v1_1/read:02\tConst_4:0"
      value: "\n\006v2_1:0\022\013v2_1/Assign\032\013v2_1/read:02\tConst_5:0"
    }
  }
}
collection_def {
  key: "variables"
  value {
    bytes_list {
      value: "\n\nother-v1:0\022\017other-v1/Assign\032\017other-v1/read:02\007Const:0"
      value: "\n\nother-v2:0\022\017other-v2/Assign\032\017other-v2/read:02\tConst_1:0"
      value: "\n\003v:0\022\010v/Assign\032\010v/read:02\021v/initial_value:0"
      value: "\n#other-v1/ExponentialMovingAverage:0\022(other-v1/ExponentialMovingAverage/Assign\032(other-v1/ExponentialMovingAverage/read:02\014cond/Merge:0"
      value: "\n#other-v2/ExponentialMovingAverage:0\022(other-v2/ExponentialMovingAverage/Assign\032(other-v2/ExponentialMovingAverage/read:02\016cond_1/Merge:0"
      value: "\n\034v/ExponentialMovingAverage:0\022!v/ExponentialMovingAverage/Assign\032!v/ExponentialMovingAverage/read:02\016cond_2/Merge:0"
      value: "\n\005v_1:0\022\nv_1/Assign\032\nv_1/read:02\023v_1/initial_value:0"
      value: "\n\005v_2:0\022\nv_2/Assign\032\nv_2/read:02\023v_2/initial_value:0"
      value: "\n\004v1:0\022\tv1/Assign\032\tv1/read:02\tConst_2:0"
      value: "\n\004v2:0\022\tv2/Assign\032\tv2/read:02\tConst_3:0"
      value: "\n\006v1_1:0\022\013v1_1/Assign\032\013v1_1/read:02\tConst_4:0"
      value: "\n\006v2_1:0\022\013v2_1/Assign\032\013v2_1/read:02\tConst_5:0"
    }
  }
}
